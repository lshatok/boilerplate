upstream <%= app_name %> {
<% if port %>server 127.0.0.1:<%= port %> fail_timeout=0;
<% end %>
server unix:<%= path %>/tmp/sockets/unicorn.sock fail_timeout=0;
}

<% if unsecure == 'redirect' %>
    # Redirect all HTTP requests to corresponding HTTPS URLs
    server {
    listen 80;
    server_name <%= domain %>;
    return 301 https://$server_name$request_uri; # enforce https
    }
<% end %>

# HTTPS
server {
# Serving
listen 443;
server_name <%= domain %>;
root <%= path %>/public;

# Logging
access_log <%= path %>/log/nginx-access.log combined;
error_log <%= path %>/log/nginx-error.log;
rewrite_log on;

add_header Cache-Control public;

# SSL
#ssl                  on;

#ssl_certificate      /usr/local/etc/ssl/certs/<%= domain %>.crt;
#ssl_certificate_key  /usr/local/etc/ssl/private/<%= domain %>.key;

ssl_session_timeout  5m;
ssl_protocols  TLSv1 TLSv1.1 TLSv1.2;
ssl_ciphers  HIGH:!aNULL:!MD5;
ssl_prefer_server_ciphers   on;

location / {
root <%= path %>/public;
try_files $uri @<%= app_name %>;
}

location @<%= app_name %> {
proxy_redirect              off;

proxy_set_header            X-Forwarded-Proto    https;
proxy_set_header            Host                 $host;
proxy_set_header            X-Real-IP            $remote_addr;
proxy_set_header            X-Forwarded-For      $proxy_add_x_forwarded_for;

client_max_body_size        10m;
client_body_buffer_size     128k;

proxy_connect_timeout       90;
proxy_send_timeout          90;
proxy_read_timeout          90;
proxy_buffer_size           4k;
proxy_buffers               4 32k;
proxy_busy_buffers_size     64k;
proxy_temp_file_write_size  64k;

proxy_pass                  http://<%= app_name %>;
}

location ~ ^/(images|javascripts|stylesheets|system|assets)/  {
root <%= path %>/public;
expires max;
break;
}
}
